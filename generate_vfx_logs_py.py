# -*- coding: utf-8 -*-
"""generate_vfx_logs.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AoxZYpnsdXR21AvknIsCGJiXhwlOY4up
"""

import json
import random
import uuid
from datetime import datetime, timedelta

# Total number of logs
NUM_LOGS = 1000

# 10% of logs will be messy
MESSY_DATA_PERCENTAGE = 0.1
OUTPUT_FILE = "vfx_logs.json"

# Sample values
departments = ['Lighting', 'Compositing', 'FX', 'Modeling', 'Rigging', 'Animation', 'Layout', 'Rendering']
task_types = ['render', 'simulation', 'publish', 'review', 'upload']
statuses = ['inprogress', 'completed', 'failed', 'queued']
users = [f"user_{i:03}" for i in range(1, 51)]

# Function to create a clean log entry
def generateClean():
    return {
        "log_id": str(uuid.uuid4()),
        "timestamp": (datetime.now() - timedelta(minutes=random.randint(0, 10000))).isoformat(),
        "user_id": random.choice(users),
        "department": random.choice(departments),
        "task_type": random.choice(task_types),
        "status": random.choice(statuses),
        "duration_sec": round(random.uniform(10.0, 5000.0), 2),
        "host": f"render-node-{random.randint(1, 20)}"
    }

# Function to introduce messiness into a log entry
def generateMessy(log):
    messType = random.choice(['missingField', 'badTimestamp', 'invalidStatus', 'unknownDepartment'])

    if messType == 'missingField':
        key_to_remove = random.choice(list(log.keys()))
        del log[key_to_remove]

    elif messType == 'badTimestamp':
        log['timestamp'] = '??/??/????'

    elif messType == 'invalidStatus':
        log['status'] = random.choice(['done', 'progressing', 'fail', 'ok'])

    elif messType == 'unknownDepartment':
        log['department'] = random.choice(['Previs', 'TechAnim', 'RotoPaint', '???'])

    return log

# Generate all logs
logs = []
for _ in range(NUM_LOGS):
    entry = generateClean()
    if random.random() < MESSY_DATA_PERCENTAGE:
        entry = generateMessy(entry)
    logs.append(entry)

# Save to JSON
with open(OUTPUT_FILE, 'w') as f:
    json.dump(logs, f, indent=2)

print(f"✅ {NUM_LOGS} log entries written to {OUTPUT_FILE}")
print(f"⚠️ ~{int(NUM_LOGS * MESSY_DATA_PERCENTAGE)} entries include messy data.")

from google.colab import files
files.download("/content/vfx_log_data.json")